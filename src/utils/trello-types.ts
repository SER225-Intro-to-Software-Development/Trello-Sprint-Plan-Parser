// I autogenerated these types from the Trello JSON data using this site: https://transform.tools/json-to-typescript
// The types look really weird because the autogenerator couldn't quite understand the Trello JSON data's structure, but it's okay it does the job for now.

export interface TrelloData {
  id: string
  nodeId: string
  name: string
  desc: string
  descData: any
  closed: boolean
  dateClosed: any
  idOrganization: string
  idEnterprise: any
  limits: Limits
  pinned: boolean
  starred: boolean
  url: string
  prefs: Prefs
  shortLink: string
  subscribed: boolean
  labelNames: LabelNames
  powerUps: any[]
  dateLastActivity: string
  dateLastView: string
  shortUrl: string
  idTags: any[]
  datePluginDisable: any
  creationMethod: any
  ixUpdate: string
  templateGallery: any
  enterpriseOwned: boolean
  idBoardSource: any
  premiumFeatures: string[]
  idMemberCreator: string
  type: any
  actions: Action[]
  cards: Card2[]
  labels: Label2[]
  lists: List2[]
  members: Member3[]
  checklists: Checklist2[]
  customFields: any[]
  memberships: Membership[]
  pluginData: any[]
}

export interface Limits {
  attachments: Attachments
  boards: Boards
  cards: Cards
  checklists: Checklists
  checkItems: CheckItems
  customFields: CustomFields
  customFieldOptions: CustomFieldOptions
  labels: Labels
  lists: Lists
  stickers: Stickers
  reactions: Reactions
}

export interface Attachments {
  perBoard: PerBoard
  perCard: PerCard
}

export interface PerBoard {
  status: string
  disableAt: number
  warnAt: number
}

export interface PerCard {
  status: string
  disableAt: number
  warnAt: number
}

export interface Boards {
  totalMembersPerBoard: TotalMembersPerBoard
  totalAccessRequestsPerBoard: TotalAccessRequestsPerBoard
}

export interface TotalMembersPerBoard {
  status: string
  disableAt: number
  warnAt: number
}

export interface TotalAccessRequestsPerBoard {
  status: string
  disableAt: number
  warnAt: number
}

export interface Cards {
  openPerBoard: OpenPerBoard
  openPerList: OpenPerList
  totalPerBoard: TotalPerBoard
  totalPerList: TotalPerList
}

export interface OpenPerBoard {
  status: string
  disableAt: number
  warnAt: number
}

export interface OpenPerList {
  status: string
  disableAt: number
  warnAt: number
}

export interface TotalPerBoard {
  status: string
  disableAt: number
  warnAt: number
}

export interface TotalPerList {
  status: string
  disableAt: number
  warnAt: number
}

export interface Checklists {
  perBoard: PerBoard2
  perCard: PerCard2
}

export interface PerBoard2 {
  status: string
  disableAt: number
  warnAt: number
}

export interface PerCard2 {
  status: string
  disableAt: number
  warnAt: number
}

export interface CheckItems {
  perChecklist: PerChecklist
}

export interface PerChecklist {
  status: string
  disableAt: number
  warnAt: number
}

export interface CustomFields {
  perBoard: PerBoard3
}

export interface PerBoard3 {
  status: string
  disableAt: number
  warnAt: number
}

export interface CustomFieldOptions {
  perField: PerField
}

export interface PerField {
  status: string
  disableAt: number
  warnAt: number
}

export interface Labels {
  perBoard: PerBoard4
}

export interface PerBoard4 {
  status: string
  disableAt: number
  warnAt: number
}

export interface Lists {
  openPerBoard: OpenPerBoard2
  totalPerBoard: TotalPerBoard2
}

export interface OpenPerBoard2 {
  status: string
  disableAt: number
  warnAt: number
}

export interface TotalPerBoard2 {
  status: string
  disableAt: number
  warnAt: number
}

export interface Stickers {
  perCard: PerCard3
}

export interface PerCard3 {
  status: string
  disableAt: number
  warnAt: number
}

export interface Reactions {
  perAction: PerAction
  uniquePerAction: UniquePerAction
}

export interface PerAction {
  status: string
  disableAt: number
  warnAt: number
}

export interface UniquePerAction {
  status: string
  disableAt: number
  warnAt: number
}

export interface Prefs {
  permissionLevel: string
  hideVotes: boolean
  voting: string
  comments: string
  invitations: string
  selfJoin: boolean
  cardCovers: boolean
  showCompleteStatus: boolean
  cardCounts: boolean
  isTemplate: boolean
  cardAging: string
  calendarFeedEnabled: boolean
  hiddenPluginBoardButtons: any[]
  switcherViews: SwitcherView[]
  autoArchive: any
  background: string
  backgroundColor: string
  backgroundDarkColor: string
  backgroundImage: string
  backgroundDarkImage: string
  backgroundImageScaled: any
  backgroundTile: boolean
  backgroundBrightness: string
  sharedSourceUrl: any
  backgroundBottomColor: string
  backgroundTopColor: string
  canBePublic: boolean
  canBeEnterprise: boolean
  canBeOrg: boolean
  canBePrivate: boolean
  canInvite: boolean
}

export interface SwitcherView {
  viewType: string
  enabled: boolean
}

export interface LabelNames {
  green: string
  yellow: string
  orange: string
  red: string
  purple: string
  blue: string
  sky: string
  lime: string
  pink: string
  black: string
  green_dark: string
  yellow_dark: string
  orange_dark: string
  red_dark: string
  purple_dark: string
  blue_dark: string
  sky_dark: string
  lime_dark: string
  pink_dark: string
  black_dark: string
  green_light: string
  yellow_light: string
  orange_light: string
  red_light: string
  purple_light: string
  blue_light: string
  sky_light: string
  lime_light: string
  pink_light: string
  black_light: string
}

export interface Action {
  id: string
  idMemberCreator: string
  data: Data
  appCreator: any
  type: string
  date: string
  limits: any
  memberCreator: MemberCreator
  member?: Member2
}

export interface Data {
  card?: Card
  old?: Old
  board: Board
  list?: List
  memberType?: string
  idMemberAdded?: string
  listBefore?: ListBefore
  listAfter?: ListAfter
  idMember?: string
  deactivated?: boolean
  member?: Member
  checklist?: Checklist
  creationMethod: any
}

export interface Card {
  id: string
  name: string
  idShort: number
  shortLink: string
  desc?: string
  idLabels?: string[]
  cover?: Cover
  idList?: string
  pos?: number
}

export interface Cover {
  color: string
  idAttachment: any
  idUploadedBackground: any
  size: string
  brightness: string
  manualCoverAttachment: boolean
  plugin: any
}

export interface Old {
  name?: string
  pos?: number
  desc?: string
  idLabels?: string[]
  cover?: Cover2
  idList?: string
}

export interface Cover2 {
  color?: string
  idAttachment: any
  idUploadedBackground: any
  size: string
  brightness: string
  manualCoverAttachment: boolean
  plugin: any
}

export interface Board {
  id: string
  name: string
  shortLink: string
}

export interface List {
  id: string
  name: string
  pos?: number
}

export interface ListBefore {
  id: string
  name: string
}

export interface ListAfter {
  id: string
  name: string
}

export interface Member {
  id: string
  name: string
}

export interface Checklist {
  id: string
  name: string
}

export interface MemberCreator {
  id: string
  activityBlocked: boolean
  avatarHash: string
  avatarUrl: string
  fullName: string
  idMemberReferrer: any
  initials: string
  nonPublic: NonPublic
  nonPublicAvailable: boolean
  username: string
}

export interface NonPublic {}

export interface Member2 {
  id: string
  activityBlocked: boolean
  avatarHash: string
  avatarUrl: string
  fullName: string
  idMemberReferrer: any
  initials: string
  nonPublic: NonPublic2
  nonPublicAvailable: boolean
  username: string
}

export interface NonPublic2 {
  fullName?: string
  initials?: string
  avatarHash: any
}

export interface Card2 {
  id: string
  address: any
  badges: Badges
  checkItemStates: any[]
  closed: boolean
  coordinates: any
  creationMethod: any
  creationMethodError: any
  creationMethodLoadingStartedAt: any
  dueComplete: boolean
  dateClosed: any
  dateLastActivity: string
  dateCompleted: any
  dateViewedByCreator: any
  desc: string
  descData: DescData
  due: any
  dueReminder: any
  email: string
  externalSource: any
  faviconUrl: any
  idBoard: string
  idChecklists: string[]
  idLabels: string[]
  idList: string
  idMemberCreator: string
  idMembers: string[]
  idMembersVoted: any[]
  idOrganization: string
  idShort: number
  idAttachmentCover: any
  labels: Label[]
  limits: Limits2
  locationName: any
  manualCoverAttachment: boolean
  name: string
  nodeId: string
  originalDesc: string
  originalName: string
  pinned: boolean
  pos: number
  recurrenceRule: any
  shortLink: string
  shortUrl: string
  singleInstrumentationId: any
  sourceEmail: any
  staticMapUrl: any
  start: any
  subscribed: boolean
  url: string
  urlSource: any
  urlSourceText: any
  cover: Cover3
  isTemplate: boolean
  cardRole: any
  mirrorSourceId: any
  mirrorSourceNodeId: any
  attachments: any[]
  pluginData: any[]
  customFieldItems: any[]
}

export interface Badges {
  attachments: number
  fogbugz: string
  checkItems: number
  checkItemsChecked: number
  checkItemsEarliestDue: any
  comments: number
  description: boolean
  due: any
  dueComplete: boolean
  lastUpdatedByAi: boolean
  start: any
  externalSource: any
  attachmentsByType: AttachmentsByType
  location: boolean
  votes: number
  maliciousAttachments: number
  viewingMemberVoted: boolean
  subscribed: boolean
}

export interface AttachmentsByType {
  trello: Trello
}

export interface Trello {
  board: number
  card: number
}

export interface DescData {
  emoji: Emoji
}

export interface Emoji {}

export interface Label {
  id: string
  idBoard: string
  idOrganization: string
  name: string
  nodeId: string
  color: string
  uses: number
}

export interface Limits2 {
  attachments: Attachments2
  checklists: Checklists2
  stickers: Stickers2
}

export interface Attachments2 {
  perCard: PerCard4
}

export interface PerCard4 {
  status: string
  disableAt: number
  warnAt: number
}

export interface Checklists2 {
  perCard: PerCard5
}

export interface PerCard5 {
  status: string
  disableAt: number
  warnAt: number
}

export interface Stickers2 {
  perCard: PerCard6
}

export interface PerCard6 {
  status: string
  disableAt: number
  warnAt: number
}

export interface Cover3 {
  idAttachment: any
  color?: string
  idUploadedBackground: any
  size: string
  brightness: string
  idPlugin: any
}

export interface Label2 {
  id: string
  idBoard: string
  name: string
  color: string
  uses: number
}

export interface List2 {
  id: string
  name: string
  closed: boolean
  color: any
  idBoard: string
  pos: number
  subscribed: boolean
  softLimit: any
  type: any
  datasource: Datasource
  creationMethod: any
  idOrganization: string
  limits: Limits3
  nodeId: string
}

export interface Datasource {
  filter: boolean
}

export interface Limits3 {
  cards: Cards2
}

export interface Cards2 {
  openPerList: OpenPerList2
  totalPerList: TotalPerList2
}

export interface OpenPerList2 {
  status: string
  disableAt: number
  warnAt: number
}

export interface TotalPerList2 {
  status: string
  disableAt: number
  warnAt: number
}

export interface Member3 {
  id: string
  aaId: string
  activityBlocked: boolean
  avatarHash: string
  avatarUrl: string
  bio: string
  bioData: any
  confirmed: boolean
  fullName: string
  idEnterprise: any
  idEnterprisesDeactivated?: any[]
  idMemberReferrer: any
  idPremOrgsAdmin: string[]
  initials: string
  memberType: string
  nonPublic: NonPublic3
  nonPublicAvailable: boolean
  products: any[]
  url: string
  username: string
  status: string
}

export interface NonPublic3 {
  fullName?: string
  initials?: string
  avatarHash: any
}

export interface Checklist2 {
  id: string
  name: string
  idBoard: string
  idCard: string
  pos: number
  limits: Limits4
  checkItems: CheckItem[]
  creationMethod: any
}

export interface Limits4 {
  checkItems: CheckItems2
}

export interface CheckItems2 {
  perChecklist: PerChecklist2
}

export interface PerChecklist2 {
  status: string
  disableAt: number
  warnAt: number
}

export interface CheckItem {
  id: string
  name: string
  nameData: NameData
  pos: number
  state: string
  due: any
  dueReminder: any
  idMember: any
  idChecklist: string
}

export interface NameData {
  emoji: Emoji2
}

export interface Emoji2 {}

export interface Membership {
  id: string
  idMember: string
  memberType: string
  unconfirmed: boolean
  deactivated: boolean
}
